package handlers

import (
	"fmt"

	"github.com/xeipuuv/gojsonschema"
)

// ErrorValidation Save the attributes generated by gojsonschema
type ErrorValidation struct {
	Err          error
	ErrorMessage []gojsonschema.ResultError
}

// TransformErrors convert ResultError to []string
func (e *ErrorValidation) TransformErrors() (result []string) {
	if len(e.ErrorMessage) == 0 {
		return result
	}

	for _, e := range e.ErrorMessage {
		result = append(result, e.String())
	}

	return result
}

// ValidateSchemeJSON Given a JSON validates its structure to see if it complies with the JSON Schema rules
func ValidateSchemeJSON(source any, validateJSON string) ErrorValidation {
	validationSchemaSaveVoucher := gojsonschema.NewStringLoader(validateJSON)
	paramsValidate := gojsonschema.NewGoLoader(source)
	result, err := gojsonschema.Validate(validationSchemaSaveVoucher, paramsValidate)

	if err != nil {
		return ErrorValidation{
			Err: fmt.Errorf("error validate struct %v", err),
		}
	}

	if !result.Valid() {
		return ErrorValidation{
			Err:          fmt.Errorf("error validate struct %v", err),
			ErrorMessage: result.Errors(),
		}
	}

	return ErrorValidation{
		Err: nil,
	}
}
